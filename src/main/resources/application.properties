#Spring boot uses H2 database by default, this overrides that by making Postgres the database we want to use
#spring.database.driverClassName=org.postgresql.Driver
spring.datasource.url= jdbc:postgresql://localhost:5432/sellyourownhomedb
spring.datasource.username=postgres
spring.datasource.password=+Chopper321

#Create-drop tells hibernate to create a database on startup. In production or test you would use "validate"
#spring.jpa.hibernate.ddl-auto=create-drop 


#spring.main.banner-mode=off

# create and drop tables and sequences, loads import.sql
#spring.jpa.hibernate.ddl-auto=create-drop

# Oracle settings
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
#spring.datasource.username=system
#spring.datasource.password=password
#spring.datasource.driver-class-oracle.jdbc.driver.OracleDriver

# HikariCP settings
# spring.datasource.hikari.*

#spring.datasource.hikari.connection-timeout=60000
#spring.datasource.hikari.maximum-pool-size=5

# logging
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
#logging.level.org.hibernate.SQL=debug
#logging.level.org.hibernate.type.descriptor.sql=trace
#logging.level.=error
#logging.level.org.springframework.web=DEBUG
#logging.level.org.hibernate=ERROR

# Set Port Number
#server.port=0

# server.port = 8090
# server.port=0 #For random port use
